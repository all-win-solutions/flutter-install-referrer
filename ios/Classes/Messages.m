// Autogenerated from Pigeon (v2.0.2), do not edit directly.
// See also: https://pub.dev/packages/pigeon
#import "Messages.h"
#import <Flutter/Flutter.h>

#if !__has_feature(objc_arc)
#error File requires ARC to be enabled.
#endif

static NSDictionary<NSString *, id> *wrapResult(id result, FlutterError *error) {
  NSDictionary *errorDict = (NSDictionary *)[NSNull null];
  if (error) {
    errorDict = @{
        @"code": (error.code ? error.code : [NSNull null]),
        @"message": (error.message ? error.message : [NSNull null]),
        @"details": (error.details ? error.details : [NSNull null]),
        };
  }
  return @{
      @"result": (result ? result : [NSNull null]),
      @"error": errorDict,
      };
}
static id GetNullableObject(NSDictionary* dict, id key) {
  id result = dict[key];
  return (result == [NSNull null]) ? nil : result;
}
static id GetNullableObjectAtIndex(NSArray* array, NSInteger key) {
  id result = array[key];
  return (result == [NSNull null]) ? nil : result;
}


@interface IRIRInstallationReferer ()
+ (IRIRInstallationReferer *)fromMap:(NSDictionary *)dict;
- (NSDictionary *)toMap;
@end

@implementation IRIRInstallationReferer
+ (instancetype)makeWithType:(IRIRInstallationType)type
    installationPlatform:(IRIRInstallationPlatform)installationPlatform
    platform:(IRIRPlatform)platform
    packageName:(nullable NSString *)packageName {
  IRIRInstallationReferer* pigeonResult = [[IRIRInstallationReferer alloc] init];
  pigeonResult.type = type;
  pigeonResult.installationPlatform = installationPlatform;
  pigeonResult.platform = platform;
  pigeonResult.packageName = packageName;
  return pigeonResult;
}
+ (IRIRInstallationReferer *)fromMap:(NSDictionary *)dict {
  IRIRInstallationReferer *pigeonResult = [[IRIRInstallationReferer alloc] init];
  pigeonResult.type = [GetNullableObject(dict, @"type") integerValue];
  pigeonResult.installationPlatform = [GetNullableObject(dict, @"installationPlatform") integerValue];
  pigeonResult.platform = [GetNullableObject(dict, @"platform") integerValue];
  pigeonResult.packageName = GetNullableObject(dict, @"packageName");
  return pigeonResult;
}
- (NSDictionary *)toMap {
  return [NSDictionary dictionaryWithObjectsAndKeys:@(self.type), @"type", @(self.installationPlatform), @"installationPlatform", @(self.platform), @"platform", (self.packageName ? self.packageName : [NSNull null]), @"packageName", nil];
}
@end

@interface IRInstallReferrerInternalAPICodecReader : FlutterStandardReader
@end
@implementation IRInstallReferrerInternalAPICodecReader
- (nullable id)readValueOfType:(UInt8)type 
{
  switch (type) {
    case 128:     
      return [IRIRInstallationReferer fromMap:[self readValue]];
    
    default:    
      return [super readValueOfType:type];
    
  }
}
@end

@interface IRInstallReferrerInternalAPICodecWriter : FlutterStandardWriter
@end
@implementation IRInstallReferrerInternalAPICodecWriter
- (void)writeValue:(id)value 
{
  if ([value isKindOfClass:[IRIRInstallationReferer class]]) {
    [self writeByte:128];
    [self writeValue:[value toMap]];
  } else 
{
    [super writeValue:value];
  }
}
@end

@interface IRInstallReferrerInternalAPICodecReaderWriter : FlutterStandardReaderWriter
@end
@implementation IRInstallReferrerInternalAPICodecReaderWriter
- (FlutterStandardWriter *)writerWithData:(NSMutableData *)data {
  return [[IRInstallReferrerInternalAPICodecWriter alloc] initWithData:data];
}
- (FlutterStandardReader *)readerWithData:(NSData *)data {
  return [[IRInstallReferrerInternalAPICodecReader alloc] initWithData:data];
}
@end

NSObject<FlutterMessageCodec> *IRInstallReferrerInternalAPIGetCodec() {
  static dispatch_once_t sPred = 0;
  static FlutterStandardMessageCodec *sSharedObject = nil;
  dispatch_once(&sPred, ^{
    IRInstallReferrerInternalAPICodecReaderWriter *readerWriter = [[IRInstallReferrerInternalAPICodecReaderWriter alloc] init];
    sSharedObject = [FlutterStandardMessageCodec codecWithReaderWriter:readerWriter];
  });
  return sSharedObject;
}


void IRInstallReferrerInternalAPISetup(id<FlutterBinaryMessenger> binaryMessenger, NSObject<IRInstallReferrerInternalAPI> *api) {
  {
    FlutterBasicMessageChannel *channel =
      [[FlutterBasicMessageChannel alloc]
        initWithName:@"dev.flutter.pigeon.InstallReferrerInternalAPI.detectReferrer"
        binaryMessenger:binaryMessenger
        codec:IRInstallReferrerInternalAPIGetCodec()        ];
    if (api) {
      NSCAssert([api respondsToSelector:@selector(detectReferrerWithCompletion:)], @"IRInstallReferrerInternalAPI api (%@) doesn't respond to @selector(detectReferrerWithCompletion:)", api);
      [channel setMessageHandler:^(id _Nullable message, FlutterReply callback) {
        [api detectReferrerWithCompletion:^(IRIRInstallationReferer *_Nullable output, FlutterError *_Nullable error) {
          callback(wrapResult(output, error));
        }];
      }];
    }
    else {
      [channel setMessageHandler:nil];
    }
  }
}
